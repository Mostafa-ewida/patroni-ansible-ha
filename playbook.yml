---
- name: Updating , Configuring hosts file
  hosts: all
  become: yes
  gather_facts: yes

  tasks:
    - name: Include common role
      include_role:
        name: common




- name: Configure etcd nodes
  hosts: etcd
  become: yes

  tasks:
    - name: Include etcd role
      include_role:
        name: etcd





- name: Configure PostgreSQL nodes
  hosts: postgres
  become: yes

  tasks:
    - name: Include postgres role
      include_role:
        name: postgres





- name: Configure HAProxy nodes
  hosts: haproxy
  become: yes

  tasks:
    - name: Include haproxy role
      include_role:
        name: haproxy



        
- name: Verify cluster setup
  hosts: all
  become: yes

  tasks:
    - name: Wait for services to stabilize
      pause:
        seconds: 10

    - name: Check etcd health
      shell: |
       etcdctl --endpoints=http://{{ ansible_default_ipv4.address }}:2379 endpoint health
      register: etcd_health
      changed_when: false
      ignore_errors: true
      when: "'etcd' in group_names"

    - name: Display etcd health
      debug:
        var: etcd_health.stdout_lines
      when: etcd_health is defined
      
    - name: Get etcd member list
      command: etcdctl --endpoints=http://{{ ansible_default_ipv4.address }}:2379 member list
      register: etcd_members
      when: "'etcd' in group_names"
      changed_when: false
      ignore_errors: true

    - name: Display etcd members
      debug:
        var: etcd_members.stdout_lines
      when: etcd_members is defined

    - name: Check HAProxy stats page
      uri:
        url: http://localhost:{{ haproxy_stat_port | default('8404') }}
        return_content: yes
      register: haproxy_status
      changed_when: false
      ignore_errors: true
      when: "'haproxy' in group_names"

    - name: Display HAProxy status
      debug:
        var: haproxy_status.status
      when: haproxy_status is defined

    - name: Check for VIP
      command: ip a show {{ vip_interface | default('eth0') }}
      register: vip_check
      changed_when: false
      ignore_errors: true
      when: "'haproxy' in group_names"

    - name: Display VIP status
      debug:
        msg: "{{ 'VIP is assigned' if (virtual_ip | default('') in vip_check.stdout | default('')) else 'VIP not assigned (may be normal for backup node)' }}"
      when: vip_check is defined

    - name: Get Patroni service status
      systemd:
        name: patroni
      register: patroni_status
      ignore_errors: true
      when: "'postgres' in group_names"

    - name: Display Patroni service state
      debug:
        msg: "Patroni active: {{ patroni_status.status.ActiveState }}"
      when: patroni_status is defined

    - name: Check PostgreSQL API
      uri:
        url: http://{{ ansible_default_ipv4.address }}:8008
        return_content: yes
      register: patroni_api
      changed_when: false
      ignore_errors: true
      when: "'postgres' in group_names"

    - name: Display PostgreSQL state
      debug:
        msg: "PostgreSQL Reachable: {{ (patroni_api.content | from_json).state }}"
      when: patroni_api is defined

    - name: Check your credentials in /etc/patroni/credentials.yml
      debug:
        msg: "Ensure you have the correct credentials in /tmp/patroni-credentials.yml for Patroni API access."